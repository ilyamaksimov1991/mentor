// Code generated by MockGen. DO NOT EDIT.
// Source: weather.go

// Package view is a generated GoMock package.
package view

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWeatherer is a mock of Weatherer interface.
type MockWeatherer struct {
	ctrl     *gomock.Controller
	recorder *MockWeathererMockRecorder
}

// MockWeathererMockRecorder is the mock recorder for MockWeatherer.
type MockWeathererMockRecorder struct {
	mock *MockWeatherer
}

// NewMockWeatherer creates a new mock instance.
func NewMockWeatherer(ctrl *gomock.Controller) *MockWeatherer {
	mock := &MockWeatherer{ctrl: ctrl}
	mock.recorder = &MockWeathererMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWeatherer) EXPECT() *MockWeathererMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockWeatherer) Get(coord Coord) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", coord)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockWeathererMockRecorder) Get(coord interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockWeatherer)(nil).Get), coord)
}
